#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    upstream nairalink_authentication {
        server 127.0.0.1:5000;
    }

    upstream nairalink_accounts {
        server 127.0.0.1:5001;
    }

    upstream nairalink_cards {
        server 127.0.0.1:5002;
    }
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    js_import oauth2.js; # Location of JavaScript code

    proxy_cache_path /var/cache/nginx/oauth keys_zone=token_responses:1m max_size=2m;

    server {
        # listen       80;
        # server_name  localhost;

        access_log /var/log/nginx/api_access.log;

        auth_request /_oauth2_token_introspection;

        listen 80;
        server_name localhost;

        # Nairalink API
        #
        location /api/ {
            # Policy configuration here (authentication, rate limiting, logging...)
            #
            access_log /var/log/nginx/nairalink_api.log;

            # URI routing
            #
            auth_request /_oauth2_token_introspection;
            auth_request_set $userid $sent_http_token_userid;
            auth_request_set $useremail $sent_http_token_email;
            proxy_set_header X-Userid $userid;
            proxy_set_header X-Useremail $useremail;

            location /api/auth {
                proxy_pass http://nairalink_authentication;
            }

            location /api/accounts {
                proxy_pass http://nairalink_accounts;
            }

            location /api/cards {
                proxy_pass http://nairalink_cards;
            }

            return 404; # Catch-all
        }

        location = /_oauth2_token_introspection {
            internal;
            js_content oauth2.introspectAccessToken;
        }

        # Error responses
        error_page 404 = @400;         # Treat invalid paths as bad requests
        proxy_intercept_errors on;     # Do not send backend errors to client

        error_page 400 = @400;
        location @400 { return 400 '{"status":400,"message":"Bad request"}\n'; }

        error_page 401 = @401;
        location @401 { return 401 '{"status":401,"message":"Unauthorized"}\n'; }

        error_page 403 = @403;
        location @403 { return 403 '{"status":403,"message":"Forbidden"}\n'; }

        error_page 404 = @404;
        location @404 { return 404 '{"status":404,"message":"Resource not found"}\n'; }

        default_type application/json; # If no content-type, assume JSON

        location /_oauth2_send_request {
            internal;
            proxy_method      POST;
            proxy_set_header  Authorization "Bearer SecretForOAuthServer";
            proxy_set_header  Content-Type "application/x-www-form-urlencoded";
            proxy_set_body    "token=$http_apikey&token_hint=access_token";
            proxy_pass        http://127.0.0.1:5000/oauth/token;

            proxy_cache           token_responses; # Enable caching
            proxy_cache_key       $http_apikey;    # Cache for each access token
            proxy_cache_lock      on;              # Duplicate tokens must wait
            proxy_cache_valid     200 20s;         # How long to use each response
            proxy_ignore_headers  Cache-Control Expires Set-Cookie;
        }

    }

}
